.grid {
  &-wrapper {
    overflow-x: hidden;
  }

  &[class*="gutter"].container {
    width: auto;
    margin-left: auto;
    margin-right: auto;
    padding-left: 0;
    padding-right: 0;
  }
}

@mixin getGridGutterClasses($bp) {
  @each $gutter in $gridGutters {
    .#{$bp}gutter {
      @if(nth($gutter, 1)) {
        &-x {
          &-#{nth($gutter, 1)} {
            margin-left: (nth($gutter, 2)/2 * -1);
            margin-right: (nth($gutter, 2)/2 * -1);

            >.col {
              flex: 1;
              padding-left: (nth($gutter, 2)/2);
              padding-right: (nth($gutter, 2)/2);
            }

            @each $con in $container {
              &.container {
                &-#{nth($con, 1)} {
                  max-width: nth($con, 2) + nth($gutter, 2);
                }
              }
            }
          }
        }

        &-y {
          &-#{nth($gutter, 1)} {
            margin-top: (nth($gutter, 2) * -1);

            >.col {
              margin-top: (nth($gutter, 2));
            }
          }
        }

      }

      @else {
        &-x {
          margin-left: (nth($gutter, 2)/2 * -1);
          margin-right: (nth($gutter, 2)/2 * -1);

          >.col {
            padding-left: (nth($gutter, 2)/2);
            padding-right: (nth($gutter, 2)/2);
          }

          @each $con in $container {
            &.container {
              &-#{nth($con, 1)} {
                max-width: nth($con, 2) + nth($gutter, 2);
              }
            }
          }
        }

        &-y {
          margin-top: (nth($gutter, 2) * -1);

          >.col {
            margin-top: (nth($gutter, 2));
          }
        }
      }

    }
  }
}